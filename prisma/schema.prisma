// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  userId        String         @unique
  chatId        String
  name          String
  username      String         @unique
  role          Role           @default(User)
  learningDecks LearningDeck[]
  Deck          Deck[]
}

model Card {
  id                           String         @id @default(auto()) @map("_id") @db.ObjectId
  question                     String
  questionMode                 Mode           @default(Text)
  answer                       String
  answerMode                   Mode           @default(Code)
  deck                         Deck           @relation(fields: [deckId], references: [id], onDelete: Cascade)
  deckId                       String         @db.ObjectId
  learningDecksKnownCardsIDs   String[]       @db.ObjectId
  learningDecksKnownCards      LearningDeck[] @relation("KnownCards", fields: [learningDecksKnownCardsIDs], references: [id])
  learningDecksUnknownCardsIDs String[]       @db.ObjectId
  learningDecksUnknownCards    LearningDeck[] @relation("UnknownCards", fields: [learningDecksUnknownCardsIDs], references: [id])
}

model Deck {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  category      String
  difficulty    Difficulty
  author        User           @relation(fields: [authorId], references: [userId])
  authorId      String
  cards         Card[]
  learningDecks LearningDeck[]
}

model LearningDeck {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  deck            Deck     @relation(fields: [deckId], references: [id], onDelete: Cascade)
  user            User     @relation(fields: [userId], references: [userId])
  deckId          String   @db.ObjectId
  userId          String
  knownCardsIDs   String[] @db.ObjectId
  knownCards      Card[]   @relation("KnownCards", fields: [knownCardsIDs], references: [id])
  unknownCardsIDs String[] @db.ObjectId
  unknownCards    Card[]   @relation("UnknownCards", fields: [unknownCardsIDs], references: [id])

  @@unique([deckId, userId])
}

enum Role {
  Admin
  User
}

enum Difficulty {
  Ease
  Medium
  Hard
}

enum Mode {
  Text
  Code
}
